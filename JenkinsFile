pipeline {
  agent any
  stages {
   stage('Account') {
      steps {
        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
          sh 'echo here will be robot -d results --variable BROWSER:headlesschrome ./tests/account'
        }
      }
    }
    stage('Content') {
      steps {
        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
          sh 'robot -d results --variable BROWSER:headlesschrome ./tests/Content'
        }
      }
    }
    stage('QA') {
      steps {
        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
          sh 'robot -d results --variable BROWSER:headlesschrome ./tests/QA'
        }
      }
    }
    stage('Search') {
      steps {
        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
          sh 'robot -d results --variable BROWSER:headlesschrome ./tests/Search'
        }
      }
    }
    stage('Navigation') {
      steps {
        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
          sh 'robot -d results --variable BROWSER:headlesschrome ./tests/navigation'
        }
      }
    }
    stage('Robot Results') {
      steps {
        script {
          step(
            [
              $class              : 'RobotPublisher',
              outputPath          : 'results',
              outputFileName      : '**/output.xml',
              reportFileName      : '**/report.html',
              logFileName         : '**/log.html',
              disableArchiveOutput: false,
              passThreshold       : 50,
              unstableThreshold   : 40,
              otherFiles          : "**/*.png,**/*.jpg",
            ]
          )
        }
      }
    }
  }
}
